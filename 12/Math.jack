// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/12/Math.jack

/**
 * A library of commonly used mathematical functions.
 * Note: Jack compilers implement multiplication and division using OS method calls.
 */
class Math {

		/** Initializes the library. */
		function void init() {
				return;
		}

		/** Returns the absolute value of x. */
		function int abs(int x) {
				if (x > 0) {						
						return x;
				}
				else {
						return -x;
				}
		}

		/** Returns the product of x and y. 
		 *  When a Jack compiler detects the multiplication operator '*' in the 
		 *  program's code, it handles it by invoking this method. In other words,
		 *  the Jack expressions x*y and multiply(x,y) return the same value.
		 */
		function int multiply(int x, int y) {
				var int sum, shiftedX, i;
				let sum = 0;
				let shiftedX = x;

				let i = 0;
				while (i < 16) {
						let i = i + 1;
				}

				return 0;
		}

		function boolean bit(int x, int n) {
				var int mask;
				let mask = Math.power(2, n);
				return ((x & mask) > 0);
		}

		function int power(int x, int y) {
				var int result, i;

				let result = 1;
				let i = 0;
				while (i < y) {
						let result = result * x;
						let i = i + 1;
				}
				return result;
		}

		/** Returns the integer part of x/y.
		 *  When a Jack compiler detects the multiplication operator '/' in the 
		 *  program's code, it handles it by invoking this method. In other words,
		 *  the Jack expressions x/y and divide(x,y) return the same value.
		 */
		function int divide(int x, int y) {
				return 0;
		}

		/** Returns the integer part of the square root of x. */
		function int sqrt(int x) {
				return 0;
		}

		/** Returns the greater number. */
		function int max(int a, int b) {
				if (a > b) {
						return a;
				}
				else {
						return b;
				}
		}

		/** Returns the smaller number. */
		function int min(int a, int b) {
				if (a > b) {
						return b;
				}
				else {
						return a;
				}
		}
}
